PostgreSQL;A database which stores detailed and categorized dossiers of the unwanted visitors and VIP guests, their biometric data, and face recognition events. It also stores data for internal use such as user accounts and camera settings. To be installed from the Ubuntu repository (along with Redis).
``ffsecurity``;A service which interfaces with all the components to provide the system functioning. Includes ``findface-security-proto`` (provides HTTP and web socket) and ``findface-security-worker`` (provides interaction between the other system components). First, ``findface-security`` gets a normalized image, full frame, and meta data of a detected face from ``fkvideo_detector``. It then redirects the normalized image to the ``extraction-api`` service to extract biometric data. The ``findface-postgres-facen`` extension uses the face biometric data to find a set of most similar faces in the dossiers. The face recognition event along with the search result is then saved into the PostgreSQL database. You can configure your system to save and display an event only if the similarity between a detected face and some face in the dossiers exceeds a pre-defined threshold, i. e. the faces match (the ``IGNORE_UNMATCHED`` option at ``/etc/ffsecurity/config.py``, see :ref:`basic-deployment`). The ``ffsecurity`` service also provides a search engine that searches the event database for a given face. 
``fkvideo_detector``;The video face detector recognizes a face in video and posts its normalized image, full frame and meta data (such as the camera ID and detection time) to the ``ffsecurity`` service.
``extraction-api``;A service which extracts face biometric data (feature vector). Requires the packages with the neural network models :program:`<findface-data>.deb`.
``findface-postgres-facen``; A :program:`PostgreSQL` extension which calculates similarity between a newly detected face and faces in the dossiers, by comparing their biometric data.  
Веб-интерфейс;Use the web interface (``ffsecurity-ui``) to work with face recognition events, search the event database and social networks for faces, and to manage cameras, users, dossiers, and watch lists.
``NTLS``;A local license server which interfaces with the NtechLab Global License Server or a USB dongle to verify a license.
