# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, NtechLab
# This file is distributed under the same license as the FindFace Security
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FindFace Security 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-23 14:07+0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../source/protocol.rst:5
msgid "Appendix. Enable Data Encryption"
msgstr ""

#: ../source/protocol.rst:7
msgid ""
"To ensure data security, it is recommended to enable SSL encryption. Do "
"the following:"
msgstr ""

#: ../source/protocol.rst:9
msgid ""
"Under the nginx configuration directory, create a directory that will be "
"used to hold all of the SSL data:"
msgstr ""

#: ../source/protocol.rst:15
msgid "Create the SSL key and certificate files:"
msgstr ""

#: ../source/protocol.rst:21
msgid ""
"You will be asked a few questions about your server in order to embed the"
" information correctly in the certificate. Fill out the prompts "
"appropriately. The most important line is the one that requests the "
"``Common Name``. You need to enter the domain name or public IP address "
"that you want to be associated with your server. Both of the files you "
"created (``nginx.key`` and ``nginx.crt``) will be placed in the "
"``/etc/nginx/ssl`` directory."
msgstr ""

#: ../source/protocol.rst:23
msgid ""
"Configure nginx to use SSL. Open the nginx configuration file. Add the "
"``listen 443 ssl`` line into it, as well as the certificate "
"``ssl_certificate`` and key ``ssl_certificate_key`` data (marked with ## "
"in the example below)."
msgstr ""

#: ../source/protocol.rst:50
msgid "Restart nginx."
msgstr ""

#: ../source/protocol.rst:56
msgid ""
"Edit the ``ffsecurity`` configuration file. In the ``EXTERNAL_ADDRESS`` "
"parameter, substitute the ``http://`` prefix with ``https://``."
msgstr ""

