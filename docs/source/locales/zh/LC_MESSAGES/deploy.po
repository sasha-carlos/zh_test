# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, NtechLab
# This file is distributed under the same license as the FindFace Security
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FindFace Security 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-23 14:07+0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../source/deploy.rst:5
msgid "Deploy Step-By-Step"
msgstr ""

#: ../source/deploy.rst:7
msgid ""
"This section will guide you through the FindFace Security step-by-step "
"deployment process. Follow the instructions below minding the sequence."
msgstr ""

#: ../source/_inclusions/prepare_install.rst:4
msgid ""
"Before deploying FindFace Security, make sure that the system time and "
"time zone are correct, and time synchronization via ``ntpd``/``systemd-"
"timesyncd`` is enabled. When using FindFace Security, avoid any sudden "
"changes in time, as they may result in unavailability of the FindFace "
"Security services after reboot."
msgstr ""

#: ../source/_inclusions/prepare_install.rst:7
msgid "See :ref:`requirements` and :ref:`architecture`."
msgstr ""

#: ../source/deploy.rst:13
msgid "В этом разделе:"
msgstr ""

#: ../source/deploy.rst:19
msgid "Prerequisites"
msgstr ""

#: ../source/deploy.rst:21
msgid ""
"FindFace Security requires PostgreSQL and Redis. Install them from the "
"Ubuntu repository as such:"
msgstr ""

#: ../source/deploy.rst:30
msgid "Prepare Packages for Installation"
msgstr ""

#: ../source/deploy.rst:32
msgid ""
"To prepare the FindFace Security deb-packages for installation, do the "
"following:"
msgstr ""

#: ../source/deploy.rst:34
msgid "Unpack the package with components."
msgstr ""

#: ../source/deploy.rst:40
msgid "Add a signature key."
msgstr ""

#: ../source/deploy.rst:47
msgid "Unpack the packages with the neural network models."
msgstr ""

#: ../source/deploy.rst:55
msgid "Licensing"
msgstr ""

#: ../source/deploy.rst:57
msgid ""
"You receive a license file from your NTechLab manager along with the "
"FindFace Security distributable packages. For on-premise licensing, you "
"will be also provided with a Guardant USB dongle."
msgstr ""

#: ../source/deploy.rst:59
msgid ""
"To install and configure the local license server (NTLS), do the "
"following:"
msgstr ""

#: ../source/deploy.rst:61
msgid "Install the NTLS component:"
msgstr ""

#: ../source/deploy.rst:69
msgid ""
"In the NTLS configuration file, you can change the license folder and the"
" NTLS web interface remote access settings. To open the NTLS "
"configuration file, execute::"
msgstr ""

#: ../source/deploy.rst:73
msgid ""
"If necessary, change the license folder in the ``license-dir`` parameter."
" By default, license files are stored at ``/ntech/license``::"
msgstr ""

#: ../source/deploy.rst:77
msgid ""
"By default, you can access the NTLS web interface from any remote host "
"(``ui = 0.0.0.0:3185``). To indicate that accessing the NTLS web "
"interface must originate from a specific IP address, edit the ``ui`` "
"parameter::"
msgstr ""

#: ../source/deploy.rst:81
msgid "Enable the NTLS service autostart and launch the service:"
msgstr ""

#: ../source/deploy.rst:87
msgid ""
"Upload the license file via the NTLS web interface "
"``http://<NTLS_IP_address>:3185/#/``."
msgstr ""

#: ../source/deploy.rst:88
msgid ""
"For the on-premise licensing, insert a Guardant USB dongle into a USB "
"port."
msgstr ""

#: ../source/deploy.rst:94
msgid "Basic Configuration"
msgstr ""

#: ../source/deploy.rst:96
msgid ""
"The FindFace Security basic configuration includes a database, database "
"extensions, the ``ffsecurity`` component and web interface. To install "
"the basic configuration, do the following:"
msgstr ""

#: ../source/deploy.rst:98
msgid ""
"Install the ``findface-postgres-9.5-facen`` extension for "
":program:`PostgreSQL` from the :program:`<ffsecurity-repo>.deb` package:"
msgstr ""

#: ../source/deploy.rst:104
msgid ""
"Using the :program:`PostgreSQL` console, create a new user ``ntech`` and "
"a database ``ffsecurity``. Upload the ``findface-postgres-9.5-facen`` "
"extension to the ``ffsecurity`` database by using the ``facen-compare-"
"bytea`` label."
msgstr ""

#: ../source/deploy.rst:118
msgid ""
"To quit from the :program:`PostgreSQL` console, type ``\\q`` и press "
":kbd:`Enter`."
msgstr ""

#: ../source/deploy.rst:120
msgid ""
"Allow authentication in :program:`PostgreSQL` by UID of a socket client. "
"Restart :program:`PostgreSQL`."
msgstr ""

#: ../source/deploy.rst:128
msgid ""
"Install the ``ffsecurity`` component from the :program:`<ffsecurity-"
"repo>.deb` package."
msgstr ""

#: ../source/deploy.rst:131
msgid "NginX will be automatically installed from dependencies."
msgstr ""

#: ../source/deploy.rst:137
msgid ""
"Install the ``ffsecurity-ui`` web interface from the :program"
":`<ffsecurity-repo>.deb` package."
msgstr ""

#: ../source/deploy.rst:143
msgid ""
"Open the ``/etc/ffsecurity/config.py`` configuration file. In the "
"``EXTERNAL_ADDRESS`` parameter, specify the host external IP address or "
"URL to be used to access the web interface. To authorize the video face "
"detector in ``ffsecurity``, come up with a token and specify it as "
"``VIDEO_DETECTOR_TOKEN`` (you have to specify the same token when "
":ref:`configuring <identification>` the video face detector)."
msgstr ""

#: ../source/deploy.rst:146
msgid "If necessary, ensure data security by enabling :ref:`SSL <https>`."
msgstr ""

#: ../source/deploy.rst:149
msgid ""
"If necessary, set ``’IGNORE_UNMATCHED’: True`` to disable logging events "
"for faces which have no match in the dossiers (negative verification "
"result). Enable this option if the system has to process a large number "
"of faces. The face similarity threshold for verification is defined by "
"the ``CONFIDENCE_THRESHOLD`` parameter."
msgstr ""

#: ../source/deploy.rst:154
msgid ""
"It is recommended to change the ``MINIMUM_DOSSIER_QUALITY`` default "
"value. This parameter determines the minimum quality of a face in a "
"dossier photo. Photos containing faces of worse quality will be rejected "
"when uploading to a dossier. Upright faces in frontal position are "
"considered the best quality. They result in values around 0, mostly "
"negative (such as -0.00067401276, for example). Inverted faces and large "
"face angles are estimated with negative values some -5 and less. By "
"default, ``’MINIMUM_DOSSIER_QUALITY’: -7`` which means that faces of any "
"quality can be uploaded to a dossier."
msgstr ""

#: ../source/deploy.rst:188
msgid ""
"If necessary, edit the ``/etc/nginx/sites-available/ffsecurity-"
"nginx.conf`` configuration file as well."
msgstr ""

#: ../source/deploy.rst:190
msgid ""
"Disable the default nginx server and add the ``ffsecurity`` server to the"
" list of enabled servers. Restart nginx."
msgstr ""

#: ../source/deploy.rst:200
msgid ""
"Migrate the database architecture from FindFace Security to "
":program:`PostgreSQL`, create user groups with :ref:`pre-defined <users>`"
" rights and the first user with administrator rights (a.k.a. Super "
"Administrator)."
msgstr ""

#: ../source/deploy.rst:203
msgid "Super Administrator cannot be deprived of its rights, whatever the role."
msgstr ""

#: ../source/deploy.rst:213
msgid "Start the services."
msgstr ""

#: ../source/deploy.rst:216
msgid ""
"The ffsecurity service includes ``findface-security-proto`` (provides "
"HTTP and web socket) and ``findface-security-worker`` (provides "
"interaction of the other system components). The number of the "
"``findface-security-worker`` instances is calculated using the formula: "
"``N=(number of CPU cores-1)``, and specified after the ``@`` character, "
"for example, ``findface-security-worker@{1,2,3}`` indicates 3 instances."
msgstr ""

#: ../source/deploy.rst:228
msgid "Video-Based Biometric Identification"
msgstr ""

#: ../source/deploy.rst:230
msgid ""
"To install ``fkvideo_detector`` and ``extraction-api``, components for "
"video-based biometric identification, do the following:"
msgstr ""

#: ../source/deploy.rst:233
msgid "Install the video face detector."
msgstr ""

#: ../source/deploy.rst:239
msgid ""
"Open the video face detector configuration file and edit the following "
"settings:"
msgstr ""

#: ../source/deploy.rst:242
msgid ""
"Note that the values of ``api-token`` and ``VIDEO_DETECTOR_TOKEN`` "
"(``/etc/ffsecurity/config.py``) must be the same (see :ref:`basic-"
"deployment`)."
msgstr ""

#: ../source/deploy.rst:261
msgid ""
"By default, the video face detector selects the best face snapshot in the"
" real-time mode (``realtime=1``). In this mode, the video face detector "
"posts a face to ``ffsecurity`` immediately after it appears in a camera "
"field of view. For more effective snapshot selection, we recommend you to"
" set the offline mode (``realtime=0``). The offline mode is less storage "
"intensive as it allows posting only one snapshot per face, but of the "
"highest quality."
msgstr ""

#: ../source/deploy.rst:263
msgid ""
"Enable the ``fkvideo_detector`` service autostart and launch the service."
" Make sure that the service is active."
msgstr ""

#: ../source/deploy.rst:271
msgid "Install the ``extraction-api`` component."
msgstr ""

#: ../source/deploy.rst:277
msgid ""
"In the ``extraction-api`` configuration file, enable the "
"``quality_estimator`` to be able to estimate the face quality in a "
"dossier."
msgstr ""

#: ../source/deploy.rst:280
msgid ""
"The :ref:`minimum face quality <quality>` in a dossier photo is set as "
"``MINIMUM_DOSSIER_QUALITY`` in ``/etc/ffsecurity/config.py``."
msgstr ""

#: ../source/deploy.rst:288
msgid ""
"In the ``extraction-api`` configuration file, disable gender, age and "
"emotions recognition models search by passing empty values to the "
"``gender``, ``age`` and ``emotions`` parameters:"
msgstr ""

#: ../source/deploy.rst:291
msgid ""
"Do not remove the parameters themselves as in this case the system will "
"be searching for default models."
msgstr ""

#: ../source/deploy.rst:300
msgid ""
"Enable the ``extraction-api`` service autostart and launch the service. "
"Make sure that the service is active."
msgstr ""

